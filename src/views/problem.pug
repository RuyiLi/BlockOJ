extends layout

block head
	title BlockOJ - #{problem.name}

	link(rel='stylesheet' href='/style/blockly.css' type='text/css')
	link(rel='stylesheet' href='/style/problem.css' type='text/css')

	script(defer type='text/javascript' src='/js/blockly/blockly_compressed.js')
	script(defer type='text/javascript' src='/js/blockly/blocks_compressed.js')
	script(defer type='text/javascript' src='/js/blockly/msg/js/en.js')
	script(defer type='text/javascript' src='/js/blockly/javascript_compressed.js')

	script(defer type='text/javascript' src='/js/blockly-util/blockly-eval.js')
	script(defer type='text/javascript' src='/js/blockly-util/blockly-storage.js')
	script(defer type='text/javascript' src='/js/blockly-util/custom-blocks.js')
	script(defer type='text/javascript' src='/js/blockly-loader.js')

	script.
		const name = '#{problem.name}'

block body
	button.button.is-success.is-size-4#submit Submit
	div.columns
		div.column.is-3
			div.box
				div.columns
					div.column
						h1.title= problem.readableName
					div.column
						- const diff = ['Easy', 'Medium', 'Hard'][problem.difficulty]
						a.button#diff(class=diff)= diff
				p !{problem.statement}

				h2 Problem Input
				p !{problem.input}
				h2 Problem Output
				p !{problem.output}

				h2 Sample Input
				pre= problem.sample.in
				h2 Sample Ouput
				pre= problem.sample.out

				h2 Explanation
				p !{problem.explanation}

				h2 Problem Tags
				each tag in problem.tags
					span.tag= tag

		div.column
			table
				div#blockly-area
			div.box.mt-5
				h1.mt-1 Verdict
				p AC means "Accepted", while WA means "Wrong Answer".
				pre#verdict Run your code by pressing the green "Submit" button in the bottom-right!
	div#blockly-container(style='position: absolute;')
	xml#blockly-toolbox(xmlns='https://developers.google.com/blockly/xml' style='display: none')
		category(name='Logic' colour='#5b80a5')
			block(type='controls_if')
			block(type='logic_compare')
				field(name='OP') EQ
			block(type='logic_operation')
				field(name='OP') AND
			block(type='logic_negate')
			block(type='logic_boolean')
				field(name='BOOL') TRUE
			block(type='logic_null')
			block(type='logic_ternary')
		category(name='Loops' colour='#5ba55b')
			block(type='controls_repeat_ext')
				value(name='TIMES')
					shadow(type='math_number')
						field(name='NUM') 10
			block(type='controls_whileUntil')
				field(name='MODE') WHILE
			block(type='controls_for')
				field(name='VAR' id='U#gVKZ$hnWobutG2~yLC') i
				value(name='FROM')
					shadow(type='math_number')
						field(name='NUM') 1
				value(name='TO')
					shadow(type='math_number')
						field(name='NUM') 10
				value(name='BY')
					shadow(type='math_number')
						field(name='NUM') 1
			block(type='controls_forEach')
				field(name='VAR' id='|w}Y72poBxUEb_![XPh%') j
			block(type='controls_flow_statements')
				field(name='FLOW') BREAK
		category(name='Math' colour='#5b67a5')
			block(type='math_number')
				field(name='NUM') 0
			block(type='math_convertToNumber')
			block(type='math_arithmetic')
				field(name='OP') ADD
				value(name='A')
					shadow(type='math_number')
						field(name='NUM') 1
				value(name='B')
					shadow(type='math_number')
						field(name='NUM') 1
			block(type='math_single')
				field(name='OP') ROOT
				value(name='NUM')
					shadow(type='math_number')
						field(name='NUM') 9
			block(type='math_trig')
				field(name='OP') SIN
				value(name='NUM')
					shadow(type='math_number')
						field(name='NUM') 45
			block(type='math_constant')
				field(name='CONSTANT') PI
			block(type='math_number_property')
				mutation(divisor_input='false')
				field(name='PROPERTY') EVEN
				value(name='NUMBER_TO_CHECK')
					shadow(type='math_number')
						field(name='NUM') 0
			block(type='math_round')
				field(name='OP') ROUND
				value(name='NUM')
					shadow(type='math_number')
						field(name='NUM') 3.1
			block(type='math_on_list')
				mutation(op='SUM')
				field(name='OP') SUM
			block(type='math_modulo')
				value(name='DIVIDEND')
					shadow(type='math_number')
						field(name='NUM') 64
				value(name='DIVISOR')
					shadow(type='math_number')
						field(name='NUM') 10
			block(type='math_constrain')
				value(name='VALUE')
					shadow(type='math_number')
						field(name='NUM') 50
				value(name='LOW')
					shadow(type='math_number')
						field(name='NUM') 1
				value(name='HIGH')
					shadow(type='math_number')
						field(name='NUM') 100
			block(type='math_random_int')
				value(name='FROM')
					shadow(type='math_number')
						field(name='NUM') 1
				value(name='TO')
					shadow(type='math_number')
						field(name='NUM') 100
			block(type='math_random_float')
		category(name='Text' colour='#5ba58c')
			block(type='text')
				field(name='TEXT')
			block(type='text_join')
				mutation(items='2')
			block(type='text_append')
				field(name='VAR' id='o6;PtoN.hCrc:OaLWOgi') item
				value(name='TEXT')
					shadow(type='text')
						field(name='TEXT')
			block(type='text_length')
				value(name='VALUE')
					shadow(type='text')
						field(name='TEXT') abc
			block(type='text_isEmpty')
				value(name='VALUE')
					shadow(type='text')
						field(name='TEXT')
			block(type='text_indexOf')
				field(name='END') FIRST
				value(name='VALUE')
					block(type='variables_get')
						field(name='VAR' id='@m9dZz88VHtitR-Pt[y[') text
				value(name='FIND')
					shadow(type='text')
						field(name='TEXT') abc
			block(type='text_charAt')
				mutation(at='true')
				field(name='WHERE') FROM_START
				value(name='VALUE')
					block(type='variables_get')
						field(name='VAR' id='@m9dZz88VHtitR-Pt[y[') text
			block(type='text_getSubstring')
				mutation(at1='true' at2='true')
				field(name='WHERE1') FROM_START
				field(name='WHERE2') FROM_START
				value(name='STRING')
					block(type='variables_get')
						field(name='VAR' id='@m9dZz88VHtitR-Pt[y[') text
			block(type='text_changeCase')
				field(name='CASE') UPPERCASE
				value(name='TEXT')
					shadow(type='text')
						field(name='TEXT') abc
			block(type='text_trim')
				field(name='MODE') BOTH
				value(name='TEXT')
					shadow(type='text')
						field(name='TEXT') abc
			block(type='text_print')
				value(name='TEXT')
					shadow(type='text')
						field(name='TEXT') abc
			block(type='text_prompt_ext')
				mutation(type='TEXT')
				field(name='TYPE') TEXT
		category(name='Lists' colour='#745ba5')
			block(type='lists_create_with')
				mutation(items='0')
			block(type='lists_create_with')
				mutation(items='3')
			block(type='lists_repeat')
				value(name='NUM')
					shadow(type='math_number')
						field(name='NUM') 5
			block(type='lists_length')
			block(type='lists_isEmpty')
			block(type='lists_indexOf')
				field(name='END') FIRST
				value(name='VALUE')
					block(type='variables_get')
						field(name='VAR' id='`P^6/`fyK|XS^3%mB7/I') list
			block(type='lists_getIndex')
				mutation(statement='false' at='true')
				field(name='MODE') GET
				field(name='WHERE') FROM_START
				value(name='VALUE')
					block(type='variables_get')
						field(name='VAR' id='`P^6/`fyK|XS^3%mB7/I') list
			block(type='lists_setIndex')
				mutation(at='true')
				field(name='MODE') SET
				field(name='WHERE') FROM_START
				value(name='LIST')
					block(type='variables_get')
						field(name='VAR' id='`P^6/`fyK|XS^3%mB7/I') list
			block(type='lists_getSublist')
				mutation(at1='true' at2='true')
				field(name='WHERE1') FROM_START
				field(name='WHERE2') FROM_START
				value(name='LIST')
					block(type='variables_get')
						field(name='VAR' id='`P^6/`fyK|XS^3%mB7/I') list
			block(type='lists_split')
				mutation(mode='SPLIT')
				field(name='MODE') SPLIT
				value(name='DELIM')
					shadow(type='text')
						field(name='TEXT') ,
			block(type='lists_sort')
				field(name='TYPE') NUMERIC
				field(name='DIRECTION') 1
		category(name='Input/Output' colour='#ff8503')
			block(type='text_print')
				value(name='TEXT')
					shadow(type='text')
						field(name='TEXT') abc
			block(type='text_prompt_ext')
				mutation(type='TEXT')
			block(type='lists_split')
				mutation(mode='SPLIT')
				field(name='MODE') SPLIT
				value(name='DELIM')
					shadow(type='text')
						field(name='TEXT') ,
		sep
		category(name='Variables' colour='#a55b80' custom='VARIABLE')
		category(name='Functions' colour='#995ba5' custom='PROCEDURE')